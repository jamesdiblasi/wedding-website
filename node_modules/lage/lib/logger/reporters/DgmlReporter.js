"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DgmlReporter = void 0;
const xmldom_1 = __importDefault(require("@xmldom/xmldom"));
const LogLevel_1 = require("../LogLevel");
class DgmlReporter {
    constructor() { }
    log(entry) {
        if (entry.msg == "info" && entry.level == LogLevel_1.LogLevel.info && entry.data) {
            const packageTasks = entry.data.packageTasks;
            if (packageTasks) {
                const dgmlDoc = new xmldom_1.default.DOMImplementation().createDocument("http://schemas.microsoft.com/vs/2009/dgml", "DirectedGraph");
                const directedGraph = dgmlDoc.documentElement;
                directedGraph.setAttribute("GraphDirection", "LeftToRight");
                const nodes = dgmlDoc.createElement("Nodes");
                const links = dgmlDoc.createElement("Links");
                const categories = dgmlDoc.createElement("Categories");
                directedGraph.appendChild(nodes);
                directedGraph.appendChild(links);
                directedGraph.appendChild(categories);
                const visitedCategories = new Set();
                for (var packageTask of packageTasks) {
                    // Node
                    const node = dgmlDoc.createElement("Node");
                    node.setAttribute("Id", packageTask.id);
                    node.setAttribute("Label", packageTask.id);
                    nodes.appendChild(node);
                    const category = dgmlDoc.createElement("Category");
                    category.setAttribute("Ref", packageTask.task);
                    node.appendChild(category);
                    // Links
                    for (var dependencyId of packageTask.dependencies) {
                        const link = dgmlDoc.createElement("Link");
                        link.setAttribute("Source", packageTask.id);
                        link.setAttribute("Target", dependencyId);
                        links.appendChild(link);
                    }
                    // Category
                    if (!visitedCategories.has(packageTask.task)) {
                        visitedCategories.add(packageTask.task);
                        const category = dgmlDoc.createElement("Category");
                        category.setAttribute("Id", packageTask.task);
                        category.setAttribute("Label", packageTask.task);
                        categories.appendChild(category);
                    }
                }
                const dgmlContents = new xmldom_1.default.XMLSerializer().serializeToString(dgmlDoc);
                console.log(dgmlContents);
            }
        }
    }
    summarize(context) { }
}
exports.DgmlReporter = DgmlReporter;
//# sourceMappingURL=DgmlReporter.js.map