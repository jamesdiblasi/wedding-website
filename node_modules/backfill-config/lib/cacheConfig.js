"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAzureBlobConfigFromSerializedOptions = exports.getNpmConfigFromSerializedOptions = void 0;
function getNpmConfigFromSerializedOptions(options, logger) {
    try {
        const parsedOptions = JSON.parse(options);
        if (typeof parsedOptions.npmPackageName !== "string" ||
            typeof parsedOptions.registryUrl !== "string") {
            throw new Error("Incorrect npm storage configuration");
        }
        return {
            provider: "npm",
            options: { ...parsedOptions },
        };
    }
    catch (error) {
        logger.error(error);
        throw new Error("Invalid npm storage options");
    }
}
exports.getNpmConfigFromSerializedOptions = getNpmConfigFromSerializedOptions;
function getAzureBlobConfigFromSerializedOptions(options, logger) {
    try {
        const parsedOptions = JSON.parse(options);
        if (typeof parsedOptions.connectionString !== "string" ||
            typeof parsedOptions.container !== "string" ||
            !(typeof parsedOptions.maxSize === "undefined" ||
                typeof parsedOptions.maxSize === "number")) {
            throw new Error("Incorrect blob storage configuration");
        }
        return {
            provider: "azure-blob",
            options: { ...parsedOptions },
        };
    }
    catch (error) {
        logger.error(error);
        throw new Error("Invalid blob storage options");
    }
}
exports.getAzureBlobConfigFromSerializedOptions = getAzureBlobConfigFromSerializedOptions;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGVDb25maWcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvY2FjaGVDb25maWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBNkNBLFNBQWdCLGlDQUFpQyxDQUMvQyxPQUFlLEVBQ2YsTUFBYztJQUVkLElBQUk7UUFDRixNQUFNLGFBQWEsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBRTFDLElBQ0UsT0FBTyxhQUFhLENBQUMsY0FBYyxLQUFLLFFBQVE7WUFDaEQsT0FBTyxhQUFhLENBQUMsV0FBVyxLQUFLLFFBQVEsRUFDN0M7WUFDQSxNQUFNLElBQUksS0FBSyxDQUFDLHFDQUFxQyxDQUFDLENBQUM7U0FDeEQ7UUFFRCxPQUFPO1lBQ0wsUUFBUSxFQUFFLEtBQUs7WUFDZixPQUFPLEVBQUUsRUFBRSxHQUFHLGFBQWEsRUFBRTtTQUM5QixDQUFDO0tBQ0g7SUFBQyxPQUFPLEtBQUssRUFBRTtRQUNkLE1BQU0sQ0FBQyxLQUFLLENBQUMsS0FBWSxDQUFDLENBQUM7UUFDM0IsTUFBTSxJQUFJLEtBQUssQ0FBQyw2QkFBNkIsQ0FBQyxDQUFDO0tBQ2hEO0FBQ0gsQ0FBQztBQXRCRCw4RUFzQkM7QUFFRCxTQUFnQix1Q0FBdUMsQ0FDckQsT0FBZSxFQUNmLE1BQWM7SUFFZCxJQUFJO1FBQ0YsTUFBTSxhQUFhLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUUxQyxJQUNFLE9BQU8sYUFBYSxDQUFDLGdCQUFnQixLQUFLLFFBQVE7WUFDbEQsT0FBTyxhQUFhLENBQUMsU0FBUyxLQUFLLFFBQVE7WUFDM0MsQ0FBQyxDQUNDLE9BQU8sYUFBYSxDQUFDLE9BQU8sS0FBSyxXQUFXO2dCQUM1QyxPQUFPLGFBQWEsQ0FBQyxPQUFPLEtBQUssUUFBUSxDQUMxQyxFQUNEO1lBQ0EsTUFBTSxJQUFJLEtBQUssQ0FBQyxzQ0FBc0MsQ0FBQyxDQUFDO1NBQ3pEO1FBRUQsT0FBTztZQUNMLFFBQVEsRUFBRSxZQUFZO1lBQ3RCLE9BQU8sRUFBRSxFQUFFLEdBQUcsYUFBYSxFQUFFO1NBQzlCLENBQUM7S0FDSDtJQUFDLE9BQU8sS0FBSyxFQUFFO1FBQ2QsTUFBTSxDQUFDLEtBQUssQ0FBQyxLQUFZLENBQUMsQ0FBQztRQUMzQixNQUFNLElBQUksS0FBSyxDQUFDLDhCQUE4QixDQUFDLENBQUM7S0FDakQ7QUFDSCxDQUFDO0FBMUJELDBGQTBCQyJ9