import { LogLevel, Logger } from "backfill-logger";
import { CacheStorageConfig } from "./cacheConfig";
export * from "./cacheConfig";
export * from "./envConfig";
export declare type HashGlobs = string[];
export declare const modesObject: {
    READ_ONLY: string;
    WRITE_ONLY: string;
    READ_WRITE: string;
    PASS: string;
};
export declare type BackfillModes = keyof typeof modesObject;
export declare type Config = {
    cacheStorageConfig: CacheStorageConfig;
    clearOutput: boolean;
    internalCacheFolder: string;
    logFolder: string;
    logLevel: LogLevel;
    name: string;
    mode: BackfillModes;
    outputGlob: string[];
    packageRoot: string;
    performanceReportName?: string;
    producePerformanceLogs: boolean;
    validateOutput: boolean;
    incrementalCaching: boolean;
};
export declare function isCorrectMode(mode: string): mode is BackfillModes;
export declare function getName(packageRoot: string): any;
export declare function getSearchPaths(fromPath: string): string[];
export declare function createDefaultConfig(fromPath: string): Config;
export declare function createConfig(logger: Logger, fromPath: string): Config;
//# sourceMappingURL=index.d.ts.map