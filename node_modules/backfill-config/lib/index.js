"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createConfig = exports.createDefaultConfig = exports.getSearchPaths = exports.getName = exports.isCorrectMode = exports.modesObject = void 0;
const path_1 = __importDefault(require("path"));
const pkg_dir_1 = __importDefault(require("pkg-dir"));
const find_up_1 = __importDefault(require("find-up"));
const envConfig_1 = require("./envConfig");
__exportStar(require("./cacheConfig"), exports);
__exportStar(require("./envConfig"), exports);
exports.modesObject = {
    READ_ONLY: "",
    WRITE_ONLY: "",
    READ_WRITE: "",
    PASS: "",
};
function isCorrectMode(mode) {
    return exports.modesObject.hasOwnProperty(mode);
}
exports.isCorrectMode = isCorrectMode;
function getName(packageRoot) {
    return (require(path_1.default.join(packageRoot, "package.json")).name ||
        path_1.default.basename(path_1.default.dirname(packageRoot)));
}
exports.getName = getName;
function getSearchPaths(fromPath) {
    const searchPaths = [];
    let nextPath = fromPath;
    while (nextPath) {
        const configLocation = find_up_1.default.sync("backfill.config.js", { cwd: nextPath });
        if (configLocation) {
            searchPaths.push(configLocation);
            nextPath = path_1.default.join(path_1.default.dirname(configLocation), "..");
        }
        else {
            nextPath = undefined;
        }
    }
    return searchPaths.reverse();
}
exports.getSearchPaths = getSearchPaths;
function createDefaultConfig(fromPath) {
    const packageRoot = pkg_dir_1.default.sync(fromPath) || fromPath;
    const defaultCacheFolder = path_1.default.join(packageRoot, "node_modules", ".cache", "backfill");
    const outputGlob = ["lib/**"];
    return {
        cacheStorageConfig: {
            provider: "local",
        },
        clearOutput: false,
        internalCacheFolder: defaultCacheFolder,
        logFolder: defaultCacheFolder,
        logLevel: "info",
        name: getName(packageRoot),
        mode: "READ_WRITE",
        outputGlob,
        packageRoot,
        producePerformanceLogs: false,
        validateOutput: false,
        incrementalCaching: false,
    };
}
exports.createDefaultConfig = createDefaultConfig;
function createConfig(logger, fromPath) {
    const defaultConfig = createDefaultConfig(fromPath);
    const fileBasedConfig = getSearchPaths(fromPath).reduce((acc, configPath) => {
        const config = require(configPath);
        if (config["mode"]) {
            if (!isCorrectMode(config["mode"])) {
                throw `Backfill config option "mode" was set, but with the wrong value: "${config["mode"]}".`;
            }
        }
        return {
            ...acc,
            ...config,
        };
    }, {});
    const envBasedConfig = envConfig_1.getEnvConfig(logger);
    return {
        ...defaultConfig,
        ...fileBasedConfig,
        ...envBasedConfig,
    };
}
exports.createConfig = createConfig;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLGdEQUF3QjtBQUN4QixzREFBNkI7QUFDN0Isc0RBQTZCO0FBSzdCLDJDQUEyQztBQUUzQyxnREFBOEI7QUFDOUIsOENBQTRCO0FBSWYsUUFBQSxXQUFXLEdBQUc7SUFDekIsU0FBUyxFQUFFLEVBQUU7SUFDYixVQUFVLEVBQUUsRUFBRTtJQUNkLFVBQVUsRUFBRSxFQUFFO0lBQ2QsSUFBSSxFQUFFLEVBQUU7Q0FDVCxDQUFDO0FBb0JGLFNBQWdCLGFBQWEsQ0FBQyxJQUFZO0lBQ3hDLE9BQU8sbUJBQVcsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDMUMsQ0FBQztBQUZELHNDQUVDO0FBRUQsU0FBZ0IsT0FBTyxDQUFDLFdBQW1CO0lBQ3pDLE9BQU8sQ0FDTCxPQUFPLENBQUMsY0FBSSxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsY0FBYyxDQUFDLENBQUMsQ0FBQyxJQUFJO1FBQ3BELGNBQUksQ0FBQyxRQUFRLENBQUMsY0FBSSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUN6QyxDQUFDO0FBQ0osQ0FBQztBQUxELDBCQUtDO0FBRUQsU0FBZ0IsY0FBYyxDQUFDLFFBQWdCO0lBQzdDLE1BQU0sV0FBVyxHQUFHLEVBQUUsQ0FBQztJQUV2QixJQUFJLFFBQVEsR0FBdUIsUUFBUSxDQUFDO0lBQzVDLE9BQU8sUUFBUSxFQUFFO1FBQ2YsTUFBTSxjQUFjLEdBQUcsaUJBQU0sQ0FBQyxJQUFJLENBQUMsb0JBQW9CLEVBQUUsRUFBRSxHQUFHLEVBQUUsUUFBUSxFQUFFLENBQUMsQ0FBQztRQUU1RSxJQUFJLGNBQWMsRUFBRTtZQUNsQixXQUFXLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1lBQ2pDLFFBQVEsR0FBRyxjQUFJLENBQUMsSUFBSSxDQUFDLGNBQUksQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7U0FDMUQ7YUFBTTtZQUNMLFFBQVEsR0FBRyxTQUFTLENBQUM7U0FDdEI7S0FDRjtJQUVELE9BQU8sV0FBVyxDQUFDLE9BQU8sRUFBRSxDQUFDO0FBQy9CLENBQUM7QUFoQkQsd0NBZ0JDO0FBRUQsU0FBZ0IsbUJBQW1CLENBQUMsUUFBZ0I7SUFDbEQsTUFBTSxXQUFXLEdBQUcsaUJBQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksUUFBUSxDQUFDO0lBQ3RELE1BQU0sa0JBQWtCLEdBQUcsY0FBSSxDQUFDLElBQUksQ0FDbEMsV0FBVyxFQUNYLGNBQWMsRUFDZCxRQUFRLEVBQ1IsVUFBVSxDQUNYLENBQUM7SUFDRixNQUFNLFVBQVUsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBRTlCLE9BQU87UUFDTCxrQkFBa0IsRUFBRTtZQUNsQixRQUFRLEVBQUUsT0FBTztTQUNsQjtRQUNELFdBQVcsRUFBRSxLQUFLO1FBQ2xCLG1CQUFtQixFQUFFLGtCQUFrQjtRQUN2QyxTQUFTLEVBQUUsa0JBQWtCO1FBQzdCLFFBQVEsRUFBRSxNQUFNO1FBQ2hCLElBQUksRUFBRSxPQUFPLENBQUMsV0FBVyxDQUFDO1FBQzFCLElBQUksRUFBRSxZQUFZO1FBQ2xCLFVBQVU7UUFDVixXQUFXO1FBQ1gsc0JBQXNCLEVBQUUsS0FBSztRQUM3QixjQUFjLEVBQUUsS0FBSztRQUNyQixrQkFBa0IsRUFBRSxLQUFLO0tBQzFCLENBQUM7QUFDSixDQUFDO0FBMUJELGtEQTBCQztBQUVELFNBQWdCLFlBQVksQ0FBQyxNQUFjLEVBQUUsUUFBZ0I7SUFDM0QsTUFBTSxhQUFhLEdBQUcsbUJBQW1CLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDcEQsTUFBTSxlQUFlLEdBQUcsY0FBYyxDQUFDLFFBQVEsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEdBQUcsRUFBRSxVQUFVLEVBQUUsRUFBRTtRQUMxRSxNQUFNLE1BQU0sR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7UUFFbkMsSUFBSSxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUU7WUFDbEIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRTtnQkFDbEMsTUFBTSxxRUFBcUUsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUM7YUFDL0Y7U0FDRjtRQUVELE9BQU87WUFDTCxHQUFHLEdBQUc7WUFDTixHQUFHLE1BQU07U0FDVixDQUFDO0lBQ0osQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBRVAsTUFBTSxjQUFjLEdBQUcsd0JBQVksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUU1QyxPQUFPO1FBQ0wsR0FBRyxhQUFhO1FBQ2hCLEdBQUcsZUFBZTtRQUNsQixHQUFHLGNBQWM7S0FDbEIsQ0FBQztBQUNKLENBQUM7QUF4QkQsb0NBd0JDIn0=